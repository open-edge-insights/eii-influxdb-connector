# Copyright (c) 2020 Intel Corporation.

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

version: '3.6'

services:
  ## Define influxdb connector service
  ia_influxdbconnector:
    depends_on:
      - ia_common
    build:
      context: $PWD/../InfluxDBConnector
      dockerfile: $PWD/../InfluxDBConnector/Dockerfile
      args:
        EIS_VERSION: ${EIS_VERSION}
        EIS_UID: ${EIS_UID}
        INFLUXDB_VERSION: ${INFLUXDB_VERSION}
        DOCKER_REGISTRY: ${DOCKER_REGISTRY}
    image: ${DOCKER_REGISTRY}ia_influxdbconnector:${EIS_VERSION}
    container_name: ia_influxdbconnector
    hostname: ia_influxdbconnector
    network_mode: host
    restart: unless-stopped
    environment:
      AppName: "InfluxDBConnector"
      CertType: "zmq,pem"
      DEV_MODE: ${DEV_MODE}
      PROFILING_MODE: ${PROFILING_MODE}
      no_proxy: ${eis_no_proxy},${ETCD_HOST}
      NO_PROXY: ${eis_no_proxy},${ETCD_HOST}
      ETCD_HOST: ${ETCD_HOST}
      ETCD_PREFIX: ${ETCD_PREFIX}

      # MessageBus Endpoint Configuration
      Clients: "Visualizer,DiscoveryCreek"
      Server: "zmq_tcp,127.0.0.1:8675"
      # Server: "zmq_ipc,${SOCKET_DIR}/"
      INFLUXDB_TLS_CIPHERS: ${TLS_CIPHERS}
      # Use IPC mode (zmq_ipc) when VideoIngestion, VideoAnalytics and Visualizer
      # based containers are running on the same host. If they are running on diff
      # host, please use TCP mode for communication.
      # Eg: Stream cfg for
      # IPC: zmq_ipc, <absolute_socket_directory_path>
      # TPC: zmq_tcp, <publisher_host>:<publisher_port>
      SubTopics: "VideoAnalytics/camera1_stream_results,DiscoveryCreek/dc_point_data_results"
      dc_point_data_results_cfg: "zmq_tcp,127.0.0.1:65014"
      camera1_stream_results_cfg: "zmq_tcp,127.0.0.1:65013"
      PubTopics: "point_data,point_classifier_results"
      point_data_cfg: "zmq_tcp,127.0.0.1:65015"
      # point_data_cfg: "zmq_ipc,${SOCKET_DIR}/"
      point_classifier_results_cfg: "zmq_tcp,127.0.0.1:65016"
    volumes:
      - "vol_influxdb_data:/influxdata"
      - "vol_eis_socket:${SOCKET_DIR}"
    user: ${EIS_UID}
    ports:
      - "$INFLUXDB_PORT:$INFLUXDB_PORT"
    secrets:
      - ca_etcd
      - etcd_InfluxDBConnector_cert
      - etcd_InfluxDBConnector_key

volumes:
  vol_influxdb_data:
    driver: local
    driver_opts:
      type: local
      o: bind
      device: ${EIS_INSTALL_PATH}/data/influxdata

secrets:
  etcd_InfluxDBConnector_cert:
    file: provision/Certificates/InfluxDBConnector/InfluxDBConnector_client_certificate.pem
  etcd_InfluxDBConnector_key:
    file: provision/Certificates/InfluxDBConnector/InfluxDBConnector_client_key.pem
